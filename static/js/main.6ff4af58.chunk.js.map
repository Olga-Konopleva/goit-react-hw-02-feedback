{"version":3,"sources":["components/Feedback/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","data/option.js","App.js","index.js"],"names":["Button","styled","button","FeedbackButtons","this","props","option","onLeaveFeedback","onClick","data-feedback","Component","FeedbackOptions","options","map","Section","title","children","Notification","message","Ul","ul","Li","li","Statistics","good","neutral","bad","total","positivePercentage","FEEDBACK_OPTIONS","App","state","handleIncrement","evt","dataAttribute","target","dataset","feedback","setState","prevState","countTotalFeedback","Object","values","reduce","acc","sum","countPositiveFeedbackPercentage","Math","round","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAGMA,EAASC,IAAOC,OAAV,mLAYNC,E,4JACJ,WAAU,IAAD,EAC6BC,KAAKC,MAAjCC,EADD,EACCA,OAAQC,EADT,EACSA,gBAChB,OACE,cAACP,EAAD,CAAQQ,QAASD,EAAiBE,gBAAeH,EAAjD,SACGA,Q,GALqBI,aA4BfC,E,4JAhBb,WAAU,IAAD,EAC8BP,KAAKC,MAAlCO,EADD,EACCA,QAASL,EADV,EACUA,gBACjB,OACE,8BACGK,EAAQC,KAAI,SAAAP,GAAM,OACjB,cAAC,EAAD,CAEEA,OAAQA,EACRC,gBAAiBA,GAFZD,Y,GAPaI,aCZfI,E,4JAXb,WAAU,IAAD,EACqBV,KAAKC,MAAzBU,EADD,EACCA,MAAOC,EADR,EACQA,SACf,OACE,oCACE,6BAAKD,IACJC,S,GANaN,aCMPO,E,4JALb,WACE,OAAO,4BAAIb,KAAKC,MAAMa,c,GAFCR,aCErBS,EAAKlB,IAAOmB,GAAV,wEAIFC,EAAKpB,IAAOqB,GAAV,mFAiCOC,E,4JA1Bb,WAAU,IAAD,EAOHnB,KAAKC,MALPmB,EAFK,EAELA,KACAC,EAHK,EAGLA,QACAC,EAJK,EAILA,IAJK,IAKLC,aALK,MAKG,EALH,MAMLC,0BANK,MAMgB,EANhB,EAQP,OACE,mCACGD,EACC,eAACR,EAAD,WACE,eAACE,EAAD,oBAAWG,KACX,eAACH,EAAD,uBAAcI,KACd,eAACJ,EAAD,mBAAUK,KACV,eAACL,EAAD,qBAAYM,KACZ,eAACN,EAAD,iCAAwBO,EAAxB,UAGF,cAAC,EAAD,CAAcV,QAAQ,4B,GApBPR,aCdZmB,EAAmB,CAAC,OAAQ,UAAW,OC6DrCC,E,4MAtDbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,gBAAkB,SAAAC,GAChB,IAAMC,EAAgBD,EAAIE,OAAOC,QAAQC,SACzC,EAAKC,UAAS,SAAAC,GAAS,sBACpBL,EAAgBK,EAAUL,GAAiB,O,EAMhDM,mBAAqB,WAGnB,OAFsBC,OAAOC,OAAO,EAAKX,OACbY,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,IAAK,I,EAI9DC,gCAAkC,SAAAnB,GAChC,OAAwB,IAApB,EAAKI,MAAMP,KACN,EAEFuB,KAAKC,MAAO,EAAKjB,MAAMP,KAAOG,EAAS,M,4CAEhD,WAAU,IAAD,EACwBvB,KAAK2B,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQvB,KAAKoC,qBACbZ,EAAqBxB,KAAK0C,gCAAgCnB,GAEhE,OACE,sBAAKsB,UAAU,MAAf,UACE,cAAC,EAAD,CAASlC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEH,QAASiB,EACTtB,gBAAiBH,KAAK4B,oBAG1B,cAAC,EAAD,CAASjB,MAAM,aAAf,SACE,cAAC,EAAD,CACES,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA/CdlB,aCFlBwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6ff4af58.chunk.js","sourcesContent":["import { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  text-transform: capitalize;\n  border-radius: 3px;\n\n  &:not(:last-child) {\n    margin-right: 8px;\n  }\n  &:hover {\n    background: white;\n  }\n`;\n\nclass FeedbackButtons extends Component {\n  render() {\n    const { option, onLeaveFeedback } = this.props;\n    return (\n      <Button onClick={onLeaveFeedback} data-feedback={option}>\n        {option}\n      </Button>\n    );\n  }\n}\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options, onLeaveFeedback } = this.props;\n    return (\n      <div>\n        {options.map(option => (\n          <FeedbackButtons\n            key={option}\n            option={option}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default FeedbackOptions;\n","import { Component } from 'react';\n\nclass Section extends Component {\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section>\n        <h2>{title}</h2>\n        {children}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import { Component } from 'react';\n\nclass Notification extends Component {\n  render() {\n    return <p>{this.props.message}</p>;\n  }\n}\n\nexport default Notification;\n","import { Component } from 'react';\nimport styled from 'styled-components';\nimport Notification from '../Notification/Notification';\n\nconst Ul = styled.ul`\n  list-style: none;\n  padding-left: 10px;\n`;\nconst Li = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nclass Statistics extends Component {\n  render() {\n    const {\n      good,\n      neutral,\n      bad,\n      total = 0,\n      positivePercentage = 0,\n    } = this.props;\n    return (\n      <>\n        {total ? (\n          <Ul>\n            <Li>Good: {good}</Li>\n            <Li>Neutral: {neutral}</Li>\n            <Li>Bad: {bad}</Li>\n            <Li>Total: {total}</Li>\n            <Li>Positive feedback: {positivePercentage}%</Li>\n          </Ul>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n\nexport default Statistics;\n","export const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];\n","import { Component } from 'react';\nimport FeedbackOptions from './components/Feedback/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport { FEEDBACK_OPTIONS } from './data/option';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = evt => {\n    const dataAttribute = evt.target.dataset.feedback;\n    this.setState(prevState => ({\n      [dataAttribute]: prevState[dataAttribute] + 1,\n    }));\n    // const textButton = evt.target.textContent.toLowerCase();\n    // this.setState(prevState => ({ [textButton]: prevState[textButton] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const arrayFeedback = Object.values(this.state);\n    const total = arrayFeedback.reduce((acc, sum) => acc + sum, 0);\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = total => {\n    if (this.state.good === 0) {\n      return 0;\n    }\n    return Math.round((this.state.good / total) * 100);\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage(total);\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={FEEDBACK_OPTIONS}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}